alexandr|alexandr@gmail.com|Так как абсолютно безопасные системы являются не более, чем мифом, на практике приходится балансировать между комфортом и безопасностью. Если каждая переменная, вводимая пользователем, будет требовать две биометрические проверки (например, сканирование сетчатки глаза и отпечатки пальцев), то вы получите предельно высокую достоверность данных. Но поскольку заполнение сложной формы будет занимать около получаса, у пользователей такой системы непременно возникнет желание обойти навязчивую защиту.|2014-12-05 13:31:42|::1|Chrome
alexandr|alexandr@gmail.com|Так как абсолютно безопасные системы являются не более, чем мифом, на практике приходится балансировать между комфортом и безопасностью. Если каждая переменная, вводимая пользователем, будет требовать две биометрические проверки (например, сканирование сетчатки глаза и отпечатки пальцев), то вы получите предельно высокую достоверность данных. Но поскольку заполнение сложной формы будет занимать около получаса, у пользователей такой системы непременно возникнет желание обойти навязчивую защиту.|2014-12-05 13:32:15|::1|Chrome
alexandr|alexandr@gmail.com|Так как абсолютно безопасные системы являются не более, чем мифом, на практике приходится балансировать между комфортом и безопасностью. Если каждая переменная, вводимая пользователем, будет требовать две биометрические проверки (например, сканирование сетчатки глаза и отпечатки пальцев), то вы получите предельно высокую достоверность данных. Но поскольку заполнение сложной формы будет занимать около получаса, у пользователей такой системы непременно возникнет желание обойти навязчивую защиту.|2014-12-05 13:33:36|::1|Chrome
qolegas|olegas@gmail.com|Правильно поставленная защита должна соответствовать основным требованиям безопасности, не ухудшая при этом работу пользователя и не усложняя самому программисту разработку продукта. Вместе с тем, некоторые атаки могут основываться именно на таком подходе к защите, что приводит к ее постепенному ослаблению.|2014-12-05 13:34:54|::1|Chrome
sergey|sergey@gmail.com|Функция может принимать информацию в виде списка аргументов, который является списком разделенных запятыми выражений. Аргументы вычисляются слева направо.|2014-12-05 13:53:18|::1|Chrome
qolegas|olegas@gmail.com|По умолчанию аргументы в функцию передаются по значению (это означает, что если вы измените значение аргумента внутри функции, то вне ее значение все равно останется прежним). Если вы хотите разрешить функции модифицировать свои аргументы, вы должны передавать их по ссылке.|2014-12-05 13:53:53|::1|Chrome
qolegas|olegas@gmail.com|&lt;h1&gt;HELLO&lt;/h1&gt;&lt;br&gt;&lt;br&gt;&lt;h1&gt;HELLO&lt;/h1&gt;&lt;br&gt;&lt;br&gt;&lt;h1&gt;HELLO&lt;/h1&gt;&lt;br&gt;&lt;br&gt;&lt;h1&gt;HELLO&lt;/h1&gt;&lt;br&gt;&lt;br&gt;&lt;h1&gt;HELLO&lt;/h1&gt;&lt;br&gt;&lt;br&gt;&lt;h1&gt;HELLO&lt;/h1&gt;|2014-12-05 13:54:39|::1|Chrome
qolegas&lt;br/&gt;|olegas@gmail.com|preparate_string_to_save preparate_string_to_save&lt;br&gt;&lt;br&gt;preparate_string_to_save|2014-12-05 13:56:15|::1|Chrome
qolegas&lt;br/&gt;|olegas@gmail.com|Каждое определение класса начинается с ключевого слова class, затем следует имя класса, и далее пара фигурных скобок, которые заключают в себе определение свойств и методов этого класса.|2014-12-07 14:53:56|::1|Chrome
alexandr|alex@gmail.com|Значение должно быть неизменяемым выражением, не (к примеру) переменной, свойством, результатом математической операции или вызовом функции.&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;Интерфейсы также могут содержать константы (constants). За примерами обращайтесь к разделу об интерфейсах.&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;Начиная с версии PHP 5.3.0, стало возможным обратиться к классу с помощью переменной. Значение переменной не должно быть ключевым словом (например, self, parent или static).|2014-12-07 14:54:42|::1|Chrome
alexandr filipov|alexandr@gmail.com|В случае, если указан дополнительный параметр matches, он будет заполнен результатами поиска. Элемент $matches[0] будет содержать часть строки, соответствующую вхождению всего шаблона, $matches[1] - часть строки, соответствующую первой подмаске, и так далее.|2014-12-11 11:23:33|::1|Chrome
alexandr filipov alex|alexandr@gmail.com|В случае, если указан дополнительный параметр matches, он будет заполнен результатами поиска. Элемент $matches[0] будет содержать часть строки, соответствующую вхождению всего шаблона, $matches[1] - часть строки, соответствующую первой подмаске, и так далее.|2014-12-11 11:23:48|::1|Chrome
alexandr filipov      alex|alexandr@gmail.com|В случае, если указан дополнительный параметр matches, он будет заполнен результатами поиска. Элемент $matches[0] будет содержать часть строки, соответствующую вхождению всего шаблона, $matches[1] - часть строки, соответствующую первой подмаске, и так далее.|2014-12-11 11:23:58|::1|Chrome
alex|alexandr@gmail.com|Свойства и методы, объявленные с директивой private, доступны только внутри класса, в котором они определены. Это означает, что даже если новый класс будет производным от класса, в котором определены частные свойства и методы, они не будут доступны в производном классе.|2014-12-11 12:29:43|::1|Chrome
alex|alexandr@gmail.com|Для дополнительного контроля над объектами, методами и свойствами устанавливается область видимости. Таким образом контролируется как и откуда могут быть доступны свойства и методы. Существует три ключевых слова для установки области видимости: public, protected, и private. В дополнение к установке области видимости, методы и свойства могут быть объявлены как static, что позволяет получать к ним доступ без реализации класса.|2014-12-11 12:32:58|::1|Chrome
qwerty|alexandr@gmail.com|Не смотря на то, что ООП сначала приводит в растерянность, оно в действительности обеспечивает более простой подход для работы с данными. Так как объект может хранить данные внутри себя, то нет необходимости предавать переменные от функции к функции для корректной работы.|2014-12-11 12:57:24|::1|Chrome
qwer|alexandr@gmail.com|Также, благодаря тому, что множественные реализации одного класса могут существовать одновременно, работа с большими наборами данных становится очень простой. Например, представим что у вас для обработки есть файл с информацией о двух людях. Нужно обрабатывать их имена, род деятельности и возраст.|2014-12-11 13:04:16|::1|Chrome
qwsdfsdf|alexandr@gmail.com|Свойства и методы, объявленные с директивой private, доступны только внутри класса, в котором они определены. Это означает, что даже если новый класс будет производным от класса, в котором определены частные свойства и методы, они не будут доступны в производном класс|2014-12-11 13:16:45|::1|Chrome
qwsdfsdf|alexandr@gmail.com|You may use the @var tag to document the data type of class variables.|2014-12-14 14:25:28|::1|Chrome
qwsdfsdf|alexandr@gmail.com|The datatype should be a valid PHP type (int, string, bool, etc), a class name for the type of object, or simply &quot;mixed&quot;. phpDocumentor will display the optional description unmodified, and defaults to &quot;mixed&quot; if the datatype is not present|2014-12-14 14:35:01|::1|Chrome
qwsdfsdf|alexandr@gmail.com|Привет!&lt;br&gt;Привет!&lt;br&gt;Привет!&lt;br&gt;Привет!|2014-12-14 14:35:50|::1|Chrome
alex|alexandr@gmail.com|Возвращает тип PHP-переменной var. Для проверки типа переменной используйте функции is_*.|2014-12-14 14:57:10|::1|Chrome
